<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<artifactId>spring-boot-starter-parent</artifactId>
		<groupId>org.springframework.boot</groupId>
		<version>1.5.1.RELEASE</version>
	</parent>

	<groupId>com.diop.ddd.learning</groupId>
	<artifactId>learning-parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>parent-service-metier</name>

	<modules>
		<module>learning-framework-mongodb/</module>
		<module>learning-framework-core/</module>
		<module>learning-framework-web/</module>

	</modules>

	<properties>

		<asciidoctor-maven-plugin.version>1.5.2</asciidoctor-maven-plugin.version>
		<asciidoctorj-pdf.version>1.5.0-alpha.8</asciidoctorj-pdf.version>
		<asm.version>5.0.3</asm.version>
		<!-- Third Party -->
		<cassandra-maven-plugin.version>2.1.7-1</cassandra-maven-plugin.version>
		<cassandra.version>3.0.0.1</cassandra.version>
		<commons-io.version>2.5</commons-io.version>
		<commons-lang.version>3.4</commons-lang.version>
		<cucumber.version>1.2.5</cucumber.version>
		<datastax-driver.version>3.1.4</datastax-driver.version>

		<jacoco-maven-plugin.version>0.7.4.201502262128</jacoco-maven-plugin.version>
		<java.version>1.8</java.version>
		<!-- Dependencies -->
		<javax.inject.version>1</javax.inject.version>
		<jjwt.version>0.7.0</jjwt.version>
		<!-- junit params tests -->
		<junitParams.version>0.3.6</junitParams.version>
		<lz4.version>1.3.0</lz4.version>
		<mapstruct.version>1.1.0.Final</mapstruct.version>
		<maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>
		<maven-failsafe-plugin.version>2.19.1</maven-failsafe-plugin.version>
		<!-- Plugins -->
		<maven-resources-plugin.version>3.0.1</maven-resources-plugin.version>
		<maven-surefire-plugin.version>2.19.1</maven-surefire-plugin.version>
		<nimbus-jose-jwt.version>4.34</nimbus-jose-jwt.version>
		<!-- Profiles - Empty values unless the corresponding profile is active -->
		<profile.swagger />
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- Sonar -->
		<project.testresult.directory>${project.basedir}/../target/test-results</project.testresult.directory>
		<sonar.jacoco.itReportPath>${project.testresult.directory}/coverage/jacoco/jacoco-it.exec</sonar.jacoco.itReportPath>
		<sonar.jacoco.reportPath>${project.testresult.directory}/coverage/jacoco/jacoco.exec</sonar.jacoco.reportPath>
		<sonar.java.codeCoveragePlugin>jacoco</sonar.java.codeCoveragePlugin>
		<sonar.sources>${project.basedir}/src/main/</sonar.sources>
		<sonar.surefire.reportsPath>${project.testresult.directory}/surefire-reports</sonar.surefire.reportsPath>
		<sonar.tests>${project.basedir}/src/test/</sonar.tests>
		<sortpom-maven-plugin.version>2.5.0</sortpom-maven-plugin.version>
		<springfox.version>2.6.1</springfox.version>
		<swagger-annotations.version>1.5.10</swagger-annotations.version>
		<swagger2markup-maven-plugin.version>1.3.1</swagger2markup-maven-plugin.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- <dependency> <groupId>com.bnpparibas.dsibddf.PJ76280</groupId> <artifactId>bddf-framework-ibm-mq-jms</artifactId> 
				<version>${project.version}</version> </dependency> <dependency> <groupId>com.bnpparibas.dsibddf.PJ76280</groupId> 
				<artifactId>bddf-framework-spring-data-cassandra</artifactId> <version>${project.version}</version> 
				</dependency> <dependency> <groupId>com.bnpparibas.dsibddf.PJ76280</groupId> 
				<artifactId>bddf-framework-spring-data-cassandra</artifactId> <version>${project.version}</version> 
				<classifier>tests</classifier> <scope>test</scope> </dependency> -->

			<!-- DataStax driver -->
			<dependency>
				<groupId>com.datastax.cassandra</groupId>
				<artifactId>cassandra-driver-core</artifactId>
				<version>${datastax-driver.version}</version>
				<classifier>shaded</classifier>
				<exclusions>
					<exclusion>
						<artifactId>*</artifactId>
						<groupId>io.netty</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.datastax.cassandra</groupId>
				<artifactId>cassandra-driver-extras</artifactId>
				<version>${datastax-driver.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>cassandra-driver-core</artifactId>
						<groupId>com.datastax.cassandra</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.datastax.cassandra</groupId>
				<artifactId>cassandra-driver-mapping</artifactId>
				<version>${datastax-driver.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>cassandra-driver-core</artifactId>
						<groupId>com.datastax.cassandra</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- <dependency> <groupId>com.bnpparibas.dsibddf.PJ76280</groupId> <artifactId>bddf-framework-batch</artifactId> 
				<version>${project.version}</version> </dependency> <dependency> <groupId>com.bnpparibas.dsibddf.PJ76280</groupId> 
				<artifactId>bddf-framework-cassandra</artifactId> <version>${project.version}</version> 
				</dependency> <dependency> <groupId>com.bnpparibas.dsibddf.PJ76280</groupId> 
				<artifactId>bddf-framework-cassandra</artifactId> <version>${project.version}</version> 
				<classifier>tests</classifier> <scope>test</scope> </dependency> <dependency> 
				<groupId>com.bnpparibas.dsibddf.PJ76280</groupId> <artifactId>bddf-framework-common</artifactId> 
				<version>${project.version}</version> </dependency> -->

			<!-- Framework projects -->
			<dependency>
				<groupId>com.diop.ddd.learning</groupId>
				<artifactId>learning-framework-core</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.diop.ddd.learning</groupId>
				<artifactId>learning-framework-mongobd</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>com.diop.ddd.learning</groupId>
				<artifactId>learning-framework-web</artifactId>
				<version>${project.version}</version>
			</dependency>

			<!-- Nimbus JWT JOSE -->
			<dependency>
				<groupId>com.nimbusds</groupId>
				<artifactId>nimbus-jose-jwt</artifactId>
				<version>${nimbus-jose-jwt.version}</version>
			</dependency>

			<!-- Include File utilities -->
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
				<scope>compile</scope>
			</dependency>

			<!-- Include Cucumber support -->
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-java</artifactId>
				<version>${cucumber.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-junit</artifactId>
				<version>${cucumber.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>info.cukes</groupId>
				<artifactId>cucumber-spring</artifactId>
				<version>${cucumber.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Json Web Token -->
			<dependency>
				<groupId>io.jsonwebtoken</groupId>
				<artifactId>jjwt</artifactId>
				<version>${jjwt.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-bean-validators</artifactId>
				<version>${springfox.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-staticdocs</artifactId>
				<version>${springfox.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Include Rest API documentation -->
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${springfox.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>mapstruct</artifactId>
						<groupId>org.mapstruct</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${swagger-annotations.version}</version>
			</dependency>

			<!-- Include @Inject annotations -->
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>${javax.inject.version}</version>
			</dependency>
			<!-- Include compression algorithm for Cassandra -->
			<dependency>
				<groupId>net.jpountz.lz4</groupId>
				<artifactId>lz4</artifactId>
				<version>${lz4.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-javadoc-plugin -->
			<dependency>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
			</dependency>

			<!-- Include test framework for Cassandra -->
			<dependency>
				<groupId>org.cassandraunit</groupId>
				<artifactId>cassandra-unit-spring</artifactId>
				<version>${cassandra.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-log4j12</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>Dalston.SR4</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- For Parameterized junit tests -->
			<dependency>
				<groupId>pl.pragmatists</groupId>
				<artifactId>JUnitParams</artifactId>
				<version>${junitParams.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- mapstruct -->
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct-jdk8</artifactId>
				<version>${org.mapstruct.version}</version>

			</dependency>
		</dependencies>

	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. Remove when the m2e 
					plugin can correctly bind to Maven lifecycle -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.jacoco</groupId>
										<artifactId>jacoco-maven-plugin</artifactId>
										<versionRange>${jacoco-maven-plugin.version}</versionRange>
										<goals>
											<goal>prepare-agent</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<!-- Configuration to sort the POM file every time in the same order -->
			<plugin>
				<groupId>com.github.ekryd.sortpom</groupId>
				<artifactId>sortpom-maven-plugin</artifactId>
				<version>${sortpom-maven-plugin.version}</version>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>sort</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<sortProperties>true</sortProperties>
					<nrOfIndentSpace>4</nrOfIndentSpace>
					<sortDependencies>groupId,artifactId</sortDependencies>
					<sortPlugins>groupId,artifactId</sortPlugins>
					<keepBlankLines>true</keepBlankLines>
					<expandEmptyElements>false</expandEmptyElements>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<!--$NO-MVN-MAN-VER$ -->
				<configuration>
					<annotationProcessorPaths>
						<path>
							<!-- MapStruct is used to generate code for bean mappings from annotations -->
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>true</downloadJavadocs>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
						<configuration>
							<reportsDirectory>${project.build.directory}/failsafe-reports</reportsDirectory>
							<argLine>${failsafeJacocoAgent}</argLine>
						</configuration>
					</execution>
				</executions>
				<configuration>
					<includes>
						<include>**/*CucumberSuiteRunner*.java</include>
					</includes>
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<!--$NO-MVN-MAN-VER$ -->
				<executions>
					<execution>
						<id>default-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/classes</outputDirectory>
							<useDefaultDelimiters>false</useDefaultDelimiters>
							<delimiters>
								<delimiter>#</delimiter>
							</delimiters>
							<resources>
								<!-- Replace the values in configuration YAML or XML files -->
								<resource>
									<directory>src/main/resources/</directory>
									<filtering>true</filtering>
									<includes>
										<include>**/*.xml</include>
										<include>**/*.yml</include>
									</includes>
								</resource>
								<!-- Ignore the default configuration files -->
								<resource>
									<directory>src/main/resources/</directory>
									<filtering>false</filtering>
									<excludes>
										<exclude>**/*.xml</exclude>
										<exclude>**/*.yml</exclude>
									</excludes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Force alphabetical order to have a reproducible build -->
					<runOrder>alphabetical</runOrder>
					<argLine>${surefireJacocoAgent}</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>pre-unit-tests</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains the execution data. -->
							<destFile>${project.testresult.directory}/coverage/jacoco/jacoco.exec</destFile>
							<propertyName>surefireJacocoAgent</propertyName>
							<append>true</append>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<destFile>${project.testresult.directory}/coverage/jacoco/jacoco-it.exec</destFile>
							<propertyName>failsafeJacocoAgent</propertyName>
							<append>true</append>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>swagger</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.github.swagger2markup</groupId>
						<artifactId>swagger2markup-maven-plugin</artifactId>
						<version>${swagger2markup-maven-plugin.version}</version>
						<executions>
							<execution>
								<phase>test</phase>
								<goals>
									<goal>convertSwagger2markup</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.ow2.asm</groupId>
								<artifactId>asm</artifactId>
								<version>${asm.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<swaggerInput>${project.build.directory}/swagger/swagger.json</swaggerInput>
							<outputDir>${project.build.directory}/docs/asciidoc/generated</outputDir>
							<config>
								<swagger2markup.markupLanguage>ASCIIDOC</swagger2markup.markupLanguage>
							</config>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.asciidoctor</groupId>
						<artifactId>asciidoctor-maven-plugin</artifactId>
						<version>${asciidoctor-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>output-html</id>
								<phase>test</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>html5</backend>
									<outputDirectory>${project.build.directory}/docs/html</outputDirectory>
								</configuration>
							</execution>
							<execution>
								<id>output-pdf</id>
								<phase>test</phase>
								<goals>
									<goal>process-asciidoc</goal>
								</goals>
								<configuration>
									<backend>pdf</backend>
									<outputDirectory>${project.build.directory}/docs/pdf</outputDirectory>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.asciidoctor</groupId>
								<artifactId>asciidoctorj-pdf</artifactId>
								<version>${asciidoctorj-pdf.version}</version>
							</dependency>
						</dependencies>
						<configuration>
							<sourceDirectory>src/docs/asciidoc</sourceDirectory>
							<sourceDocumentName>index.adoc</sourceDocumentName>
							<attributes>
								<doctype>book</doctype>
								<toc>left</toc>
								<toclevels>2</toclevels>
								<generated>${project.build.directory}/docs/asciidoc/generated</generated>
							</attributes>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<profile.swagger>,swagger</profile.swagger>
			</properties>
		</profile>
		<profile>
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<warSourceDirectory>src/main/webapp/</warSourceDirectory>
							<packagingExcludes>WEB-INF/lib/tomcat-*.jar</packagingExcludes>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<properties>
				<!-- Log configuration -->
				<logback.loglevel>DEBUG</logback.loglevel>
				<!-- Default Spring profiles based on Maven profiles -->
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-devtools</artifactId>
					<optional>true</optional>
				</dependency>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-undertow</artifactId>
				</dependency>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-web</artifactId>
					<exclusions>
						<exclusion>
							<artifactId>spring-boot-starter-tomcat</artifactId>
							<groupId>org.springframework.boot</groupId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>mock</id>
			<properties>
				<!-- Default Spring profiles based on Maven profiles -->
				<spring.profiles.active>mock</spring.profiles.active>
			</properties>
		</profile>
	</profiles>
</project>
